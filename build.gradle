buildscript {
    repositories {
        maven { url "https://maven.aliyun.com/repository/public" }
        jcenter()
    }
}

plugins {
    id 'java'
    id "com.jfrog.bintray" version "1.8.1"
    id 'maven'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    maven { url "https://maven.aliyun.com/repository/central" }
    maven { url "https://maven.aliyun.com/repository/jcenter" }
    jcenter()
}


group 'net.nextabc'
version '1.2.0'
description = 'A lightweight @Aurowired like library'


sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.slf4j:slf4j-log4j12:1.7.5'
    testCompile 'junit:junit:4.12'
}

ext {
    projectGroupId = project.group
    projectVersion = project.version
    projectName = rootProject.name
    projectDesc = description
    projectURL = "https://github.com/yoojia/Autowired"
    projectVCS = "https://github.com/yoojia/Autowired.git"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        title projectName
    }
}

artifacts {
    archives sourcesJar, javadocJar
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

    publications = ['mavenJava']
    configurations = ['archives']

    dryRun = false
    publish = true

    pkg {
        repo = 'maven'
        name = projectName
        userOrg = 'nextabc'

        licenses = ['Apache-2.0']
        vcsUrl = projectVCS
        labels = ['java', 'autowired']

        publicDownloadNumbers = true

        version {
            name = projectVersion
            desc = projectDesc
            vcsTag = projectVersion
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
}

def pomConfig = {

    name projectName
    url projectURL
    inceptionYear '2018'

    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }

    developers {
        developer {
            id "yoojia"
            name "yoojia chen"
            email "yoojiachen@gmail.com"
        }
    }

    scm {
        url projectVCS
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId projectGroupId
            artifactId projectName
            version projectVersion

            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                def root = asNode()
                root.appendNode('description', projectDesc)
                root.children().last() + pomConfig
            }
        }
    }
}